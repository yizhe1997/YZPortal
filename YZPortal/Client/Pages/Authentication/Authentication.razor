@page "/authentication/{action}"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using YZPortal.Client.Clients.YZPortalApi;
@using YZPortal.Client.Services.Authentication;
@using YZPortal.FullStackCore.Extensions;
@inject YZPortalApiHttpClient YZPortalApiClient
@inject AuthenticationStateProvider AuthenticationStateProvider
<RemoteAuthenticatorView Action="@Action" OnLogInSucceeded="@HandleAuthenticationAsync" />

@code{
    [Parameter] public string? Action { get; set; }

    private async Task HandleAuthenticationAsync()
    {
        // Create user in server if subject claim does not exist and update user if it does
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var identity = authState.User.Identities.FirstOrDefault(c => c.IsAuthenticated);
        if (identity != null)
        {
            var userId = authState.User.GetSubClaim();

            if (!string.IsNullOrEmpty(userId))
            {
                var user = await YZPortalApiClient.GetUser(userId);
                if (user.Id == Guid.Empty)
                {
                    var newUser = await YZPortalApiClient.UserCreate();
                }
                else
                {
                    var newUser = await YZPortalApiClient.UserUpdate(userId);
                }

            }
        }
    }
}
