@page "/user/login"
@using YZPortal.Client.Models.Users;
@using YZPortal.Client.Clients.YZPortalApi;
@using YZPortal.Client.Validation;
@inject YZPortalApiHttpClient YZPortalApiClient

<h3>Login</h3>

<EditForm Model="user" OnValidSubmit="OnValidSubmit" style="max-width:500px;">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="mb-2">
		<InputText class="form-control" @bind-Value="user.Email" placeholder="Enter Email"></InputText>
	</div>
	<div class="mb-2">
		<InputText type="password" class="form-control" @bind-Value="user.Password" placeholder="Enter Password"></InputText>
	</div>
	<div class="mb-2 text-right">
		<button class="btn btn-secondary" disabled="@isLoginDisabled">login</button>
	</div>
	<p disabled="@isLoginDisabled">
		Logging in...
	</p>
</EditForm>

@code {
	YZPortal.Client.Models.Users.UserLogin user = new YZPortal.Client.Models.Users.UserLogin();
	bool isLoginDisabled;
	private CustomValidation? customValidation;

	private async Task OnValidSubmit()
	{
		// Authenticate and disable login button
		isLoginDisabled = true;

		UserLoginResult userLoginResult = await YZPortalApiClient.UserAuthenticate(user);

		isLoginDisabled = userLoginResult.IsSuccessStatusCode ? false : true;
	}
}