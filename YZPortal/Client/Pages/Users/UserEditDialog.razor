﻿@using BootstrapBlazor.Components
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@using System.Diagnostics.CodeAnalysis;
@using YZPortal.Client.Clients.YZPortalApi
@using YZPortal.FullStackCore.Commands.Users;
@using YZPortal.FullStackCore.Infrastructure.Security.Authorization
@using YZPortal.FullStackCore.Models.Graph.Groups;
@using YZPortal.FullStackCore.Models.Users;

@inject YZPortalApiHttpClient YZPortalApiClient

<EditForm id="@nameof(UserEditDialog)" Model="@GraphUser" OnValidSubmit="OnValidSubmit">
    <div class="col-12">
        <BootstrapInput @bind-Value="@GraphUser.UserName" IsDisabled="true" DisplayText="Email" ShowLabel="true" />
    </div>
    <div class="col-12">
        <BootstrapInput @bind-Value="@GraphUser.DisplayName" DisplayText="Display Name" ShowLabel="true" />
    </div>
    <div class="col-12">
        <BootstrapInput @bind-Value="@GraphUser.FirstName" DisplayText="First Name" ShowLabel="true" />
    </div>
    <div class="col-12">
        <BootstrapInput @bind-Value="@GraphUser.LastName" DisplayText="Last Name" ShowLabel="true" />
    </div>
    <div class="col-12">
        <BootstrapInput @bind-Value="@GraphUser.MobilePhone" DisplayText="MobilePhone" ShowLabel="true" />
    </div>
    <div class="row g-3">
        <Divider Text="Groups" Alignment="Alignment.Left" style="margin: 2rem 0;" />
        <div class="col-12 col-sm-6">
            <MultiSelect Items="@GraphGroups" @bind-Value="SelectedGraphGroups" />
        </div>
        <div class="col-12 col-sm-6">
            <Button Icon="fa-regular fa-trash-can" Text="Clear" OnClick="@ClearListItems" />
        </div>
    </div>
</EditForm>

<div class="modal-footer">
    <button type="submit" form="@nameof(UserEditDialog)" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-light" @onclick="@CloseDialog">Cancel</button>
</div>

@code {
    private List<SelectedItem> GraphGroups = new List<SelectedItem>();
    private IEnumerable<string?> SelectedGraphGroups { get; set; } = Enumerable.Empty<string?>();
    private IEnumerable<string?> ExistingGraphGroups { get; set; } = Enumerable.Empty<string?>();

    [Parameter]
    public EventCallback<MouseEventArgs> CloseDialog { get; set; }

    [Parameter]
    public UserModel GraphUser { get; set; } = new UserModel();

    public UpdateUserCommand UpdateUserCommand { get; set; } = new UpdateUserCommand();

    private static List<SelectedItem> GenerateDataSource(GraphGroupsModel source) => source.Results.Select(i => new SelectedItem(i.Id, i.DisplayName ?? string.Empty)).ToList();

    private async Task OnValidSubmit()
    {
        var userSubIds = new string[] { GraphUser.SubjectIdentifier ?? string.Empty };

        // Add groups
        foreach (var selectdGraphGroup in SelectedGraphGroups.Except(ExistingGraphGroups))
        {
            await YZPortalApiClient.GraphGroupAddUsers(selectdGraphGroup, userSubIds);
        }

        // Remove groups
        foreach (var selectdGraphGroup in ExistingGraphGroups.Except(SelectedGraphGroups))
        {
            await YZPortalApiClient.GraphGroupRemoveUser(selectdGraphGroup, GraphUser.SubjectIdentifier);
        }

        await YZPortalApiClient.UserUpdate(GraphUser.SubjectIdentifier, new UpdateUserCommand()
        {
            DisplayName = GraphUser.DisplayName,
            FirstName = GraphUser.FirstName,
            LastName = GraphUser.LastName,
            MobilePhone = GraphUser.MobilePhone
        });

        await CloseDialog.InvokeAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var graphGroups = await YZPortalApiClient.GetGraphGroups();
        this.GraphGroups = GenerateDataSource(graphGroups);

        var selectedGraphGroups = await YZPortalApiClient.GetGraphGroups(GraphUser.SubjectIdentifier);
        this.SelectedGraphGroups = ExistingGraphGroups = selectedGraphGroups.Results.Select(x => x.Id).ToList();
    }

    private void ClearListItems()
    {
        SelectedGraphGroups = Enumerable.Empty<string?>();
    }
}