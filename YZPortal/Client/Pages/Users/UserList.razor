@page "/users"
@using Microsoft.AspNetCore.Authorization;
@using YZPortal.Client.Clients.YZPortalApi;
@using YZPortal.Client.Models.Users;
@using YZPortal.Client.Pages.Users;
@using YZPortal.FullStackCore.Infrastructure.Security.Authorization
@inject YZPortalApiHttpClient YZPortalApiClient
@inject IModalService Modal
@attribute [Authorize(Policy = Policies.IsAdmin)]

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

<button @onclick="OpenInviteUserDialog" class="btn btn-primary">Invite User</button>

@if (Users == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th><button @onclick="()=>SortBy(nameof(User.UserName))">Email</button></th>
                <th><button @onclick="()=>SortBy(nameof(User.Name))">Name</button></th>
                <th><button @onclick="()=>SortBy(nameof(User.Admin))">Admin</button></th>
                <th><button @onclick="()=>SortBy(nameof(User.LastLoggedIn))">Last logged in</button></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Users.Results)
            {
                <tr>
                    <td>@user.UserName</td>
                    <td>@user.Name</td>
                    <td>@user.Admin</td>
                    <td>@user.LastLoggedIn</td>
                </tr>
            }
        </tbody>
    </table>
    <div>
        <button disabled="@Users.PageNumber <= 1" @onclick="()=>ChangePage(-1)">Previous</button>
        <button disabled="@Users.PageNumber >= TotalPages" @onclick="()=>ChangePage(1)">Next</button>
        <span>Page @Users.PageNumber of @Users.TotalPages</span>
        <select @onchange="async e => await ChangePage(int.Parse(e.Value.ToString()))">
            @for (int i = 1; i <= @Users.TotalPages; i++)
            {
                <option value="@i" @(i= =@Users.PageNumber ? "selected" : "" )>@i</option>
            }
        </select>
    </div>
}

@code {

    private Users? Users;

    private void OpenInviteUserDialog()
    {
        var moviesModal = Modal.Show<UserInviteDialog>();
    }

    private async Task SortBy(string sortBy)
    {
        Users = await YZPortalApiClient.GetUsers(orderBy: sortBy);
        StateHasChanged();
    }

    private async Task ChangePage(int offset)
    {
        Users.PageNumber += offset;
        Users = await YZPortalApiClient.GetUsers(pageNumber: Users.PageNumber, pageSize: Users.PageSize, orderBy: Users.OrderBy);
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        Users = await YZPortalApiClient.GetUsers();
    }
}